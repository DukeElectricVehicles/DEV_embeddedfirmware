%% Gerry Chen
%   calculates moment of inertia from a setup where
%   a mass is attached to the wheel and the pendulum frequency is measured
clear;
g = 9.81;
m = 0.515;
d = (157.85+70 + 42.9/2) * 1e-3;
m_STD = 0.001;
d_STD = 0.010;

allF = [];
allF_STD = [];
allI0 = [];
allI0_STD = [];

files = dir();
for i = 1:length(files)
    filename = files(i).name;
    if (startsWith(filename,'stockHubWheelGood') && endsWith(filename,'.mat'))
        load(filename)
        Fs = 1/mean(diff(t));
        xdft = fft(x);
        xdft = xdft(1:fix(length(x)/2+1));
        freq_STD = Fs/length(x); % frequency increment
        freqvec = 0:freq_STD:Fs/2;
        [v,ind] = max(abs(xdft));
        freq = freqvec(ind);
        allF(end+1) = freq;
        allF_STD(end+1) = freq_STD;
        
        F_STD = 

        figure(1);clf;
        subplot(2,1,1);
        plot(t,x);
        subplot(2,1,2);
        plot(freqvec,abs(xdft)); hold on;
        plot(freq, abs(xdft(ind)),'r^');

        fprintf('frequency: %.5fHz +/- %.5fHz\t',freq,freq_STD);
        omega = freq*2*pi;
        I0 = m*g*d/omega^2 - m*d^2;
        I0_STD = m_STD*(g*d/omega^2 - d^2) + ...
                 d_STD*(m*g/omega^2 - 2*m*d) + ...
                 freq_STD*(
        fprintf('I0: %.5f kg.m^2\n',I0);
        allI0(end+1) = IO;
        
    end
end

allI0 = m*g*d./(allF*2*pi).^2 - m*d^2;
mean(allI0)
std(allI0)
%%  Gerry Chen
%   newPathGen.m

load manualControl_19-04-26_01_grossHall

[odoUni, indsUni] = unique(odo);

latSpline = fit(odo(indsUni), curPosLLH_lat(indsUni),'smoothingspline','SmoothingParam',.01);
lonSpline = fit(odo(indsUni), curPosLLH_lon(indsUni),'smoothingspline','SmoothingParam',.01);

%% visualize real quick
dVals = linspace(0,odo(end), 1e4);
figure(1);clf;
plot(curPosLLH_lon, curPosLLH_lat, 'k.','MarkerSize',1); hold on;
plot(lonSpline(dVals), latSpline(dVals),'r-');

grid on;
daspect([1,cosd(36),1]);

%% calculate waypoints
[xp,xpp] = differentiate(lonSpline, dVals);
[yp,ypp] = differentiate(latSpline, dVals);
curvature = abs(xp.*ypp - yp.*xpp)./(xp.^2+yp.^2).^(3/2);
% dTds = @(odo) differentiate(T,odo);

% figure(2);clf;
% plot(dVals, curvature);
curvature = smooth(curvature,300,'sgolay');
scaledCurvature = curvature./max(curvature);

% scatter(lonSpline(dVals), latSpline(dVals), 1+fix(100*scaledCurvature));
max(curvature)

intermediateIntegral = cumtrapz(scaledCurvature);
intermediateLocations = linspace(0,intermediateIntegral(end));
[v,inds] = min(abs(intermediateIntegral - intermediateLocations));
inds = inds(2:end); % manually re
newWaypoints_odo = dVals(inds);
newWaypoints_lat = latSpline(newWaypoints_odo);
newWaypoints_lon = lonSpline(newWaypoints_odo);

plot(newWaypoints_lon, newWaypoints_lat,'r^');